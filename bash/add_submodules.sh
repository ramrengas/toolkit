#!/bin/bash
# Script to add submodules at specific commit points.
#
# To execute: ./add_submodules <submodule_list>
# Each line of <submodule_list> should be formatted as:
# module_name commit_point repository_location 
#
# Example of an entry in the submodule_list:
# zookeeper 26e8dd6e90726997a37965ef469e37a96ef7085f https://github.com/apache/zookeeper.git 
#
# Submodule list can be generated by executing the following command in the top
# level directory of the project whose submodules we wish to copy:
# git submodule foreach 'echo $name $sha1 `git remote -v`'|grep -v Entering|awk '{print $1" "$2" "$4}' > submodule_list.txt

GIT=git

if [[ $# == 0 ]]; then
    echo "Usage: add_submodule <submodule_list>"
    exit 1
fi

submodule_file=$1
echo "Reading list of submodules from $submodule_file"

while read submodule commit repo
do
    echo "------------------------------"
    echo "Submodule="$submodule " Repoistory="$repo " Commit="$commit
    # Executing:
    # git submodule add --name <submodule> <repository> <path>
    # Submodule will have the same name as its path
    $GIT submodule add --name $submodule $repo $submodule
    cd $submodule
    $GIT reset --hard $commit
    cd ..
    $GIT add "$submodule/"
    $GIT commit -m "Added $submodule"
done <"$submodule_file"
